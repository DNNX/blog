<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.3">Jekyll</generator><link href="https://www.yegor256.com/rss.xml" rel="self" type="application/atom+xml" /><link href="https://www.yegor256.com/" rel="alternate" type="text/html" /><updated>2019-03-26T10:29:38+00:00</updated><id>https://www.yegor256.com/rss.xml</id><title type="html">Yegor Bugayenko</title><subtitle>Yegor Bugayenko</subtitle><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><entry><title type="html">How to Create a Java Web Framework from Scratch, the Right Object-Oriented Way</title><link href="https://www.yegor256.com/2019/03/26/jpages.html" rel="alternate" type="text/html" title="How to Create a Java Web Framework from Scratch, the Right Object-Oriented Way" /><published>2019-03-26T00:00:00+00:00</published><updated>2019-03-26T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/03/26/jpages</id><content type="html" xml:base="https://www.yegor256.com/2019/03/26/jpages.html">&lt;p&gt;How do you design a web application in Java? You install Spring, read
the manual, create &lt;a href=&quot;/2015/03/09/objects-end-with-er.html&quot;&gt;controllers&lt;/a&gt;,
create some views, add some &lt;a href=&quot;/2016/04/12/java-annotations-are-evil.html&quot;&gt;annotations&lt;/a&gt;, and it
works. What would you do if there were no
&lt;a href=&quot;https://spring.io/&quot;&gt;Spring&lt;/a&gt; (and no Ruby on Rails
in Ruby, and no Symphony in PHP, and no … etc.)? Let’s try to create
a web application from scratch, starting from a pure Java SDK and ending
with a fully functional web app, covered by unit tests. I recorded
a &lt;a href=&quot;https://www.youtube.com/watch?v=bVzEPOZ_mDU&quot;&gt;webinar no.42&lt;/a&gt;
about it just a few weeks ago, but this article should explain it
all in even more detail.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Breakfast at Tiffany&amp;#39;s (1961) by Blake Edwards&quot; src=&quot;/images/2019/03/breakfast-at-tiffanys.jpg&quot; longdesc=&quot;#d8d1a27d&quot; /&gt;&lt;figcaption id=&quot;d8d1a27d&quot;&gt;Breakfast at Tiffany&amp;#39;s (1961) by Blake Edwards&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;First of all we have to create an HTTP server, which will open a
server socket, listen to incoming connections, read everything they
have to say (HTTP requests) and return the information any
web browser would like (HTTP responses). You know how
&lt;a href=&quot;https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&quot;&gt;HTTP&lt;/a&gt; works, right?
If you don’t, here is a quick reminder:&lt;/p&gt;

&lt;p&gt;A web browser sends a request to the server and the request looks
like this (it’s a plain text piece of data):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;GET /index.html HTTP/1.1
Host: www.example.com&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The server has to read this text, prepare the answer (which has to be the
HTML page readable by the browser) and return it like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;HTTP/1.1 200 OK
Content-Type: text/html; charset=UTF-8
Content-Length: 26

&amp;lt;html&amp;gt;Hello, world!&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s it. It’s a very simple and, I would say, primitive protocol. The implementation
of a web server in Java is not so complex either. Here it is, in a very
simplistic form:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.InputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.OutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.net.ServerSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.net.Socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.net.SocketTimeoutException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ServerSocket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ServerSocket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSoTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Socket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;copyOfRange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;HTTP/1.1 200 OK\r\n\r\nHello, world!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SocketTimeoutException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentThread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isInterrupted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Try to run it, it should work. You should be able to open the &lt;code&gt;http://localhost:8080&lt;/code&gt;
page in your browser and see the &lt;code&gt;Hello, world!&lt;/code&gt; text.&lt;/p&gt;

&lt;p&gt;It’s not yet a web app, but just a skeleton, which does simple dispatching
of HTTP requests into HTTP responses. There is no serious OOP
in it though. It’s pretty procedural, but it works. Now we should focus
on a more important question: How do we add more features to the web app
and make it possible to process different pages, render larger content,
and handle errors? The &lt;code&gt;request&lt;/code&gt; variable in the snippet above
should be somehow converted to a &lt;code&gt;response&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The easiest way would be 1) to convert the request into a &lt;a href=&quot;/2016/07/06/data-transfer-object.html&quot;&gt;DTO&lt;/a&gt;
with all the details inside, then 2) send it to a “controller” that knows what to
do with the data from the DTO, and then 3) receive a response DTO from
the controller, take the data out and render the response. This is how
Spring and &lt;del&gt;most&lt;/del&gt; all other frameworks do it. However, we won’t follow this
path, we will try to do it DTO-free and &lt;a href=&quot;/2014/11/20/seven-virtues-of-good-object.html&quot;&gt;purely&lt;/a&gt;
object-oriented.&lt;/p&gt;

&lt;p&gt;I have to say that there could be multiple designs, all in an OOP style. I’ll
show you now only one of those options. You’re no doubt aware of
our &lt;a href=&quot;https://www.takes.org&quot;&gt;Takes&lt;/a&gt; framework, which
was born a few years ago—it has its own design, also object-oriented. But the
one I’m going to suggest now seems to be better. You might come up
with something else too, so don’t hesitate to post your ideas in the comments
below or even create a GitHub repo and share your thoughts right there.&lt;/p&gt;

&lt;p&gt;I suggest we introduce two interfaces: &lt;code&gt;Resource&lt;/code&gt; and &lt;code&gt;Output&lt;/code&gt;. The &lt;code&gt;Resource&lt;/code&gt;
is the server side entity, which mutates depending on the request parameters
that are coming in. For example, when all we know about the request is that
it is &lt;code&gt;GET /&lt;/code&gt;, it is one resource. But if we also know that the
request has, for example, &lt;code&gt;Accept: text/plain&lt;/code&gt;, we can mutate the request
and create a new one, which delivers plain text. Here is the interface:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here is how we create it and mutate:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DefaultResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Method&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Query&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Accept&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pay attention: each call to &lt;code&gt;.refine()&lt;/code&gt; returns a new instance
of interface &lt;code&gt;Resource&lt;/code&gt;. All of them are immutable, just like objects
&lt;a href=&quot;/2014/06/09/objects-should-be-immutable.html&quot;&gt;have to be&lt;/a&gt;.
Thanks to this design we don’t separate &lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;data&lt;/a&gt;
from their processor. The resource is the data and the processor. Each resource
knows what to do with the data, and receives only the data it is supposed
to receive. Technically, we just implement &lt;em&gt;request dispatching&lt;/em&gt;, but in
an object-oriented way.&lt;/p&gt;

&lt;p&gt;Then, we need to convert the resource to the response. We give the
resource the ability to render itself to the response. We don’t want the
&lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;data&lt;/a&gt;, in form of some DTO,
to escape the resource. We want the resource
&lt;a href=&quot;/2016/04/05/printers-instead-of-getters.html&quot;&gt;to print&lt;/a&gt; the
response. How about giving an additional method &lt;code&gt;print()&lt;/code&gt; to the resource:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then the interface &lt;code&gt;Output&lt;/code&gt; looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here is a primitive implementation of &lt;code&gt;Output&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StringBuilderOutput&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;StringBuilderOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;HTTP/1.1 200 OK\r\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Body&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To build an HTTP response we can do this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilderOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Length&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;13&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Body&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now let’s create a class which will take an incoming request &lt;code&gt;String&lt;/code&gt;
and produce a response &lt;code&gt;String&lt;/code&gt;, using an instance of &lt;code&gt;Resource&lt;/code&gt; as a
&lt;em&gt;dispatcher&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pairs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Method&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Query&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Protocol&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entrySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilderOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First, we parse the request, breaking its header into lines and ignoring
the body of the request. You can modify the code to parse the body
and pass it into the &lt;code&gt;refine()&lt;/code&gt; method too, using &lt;code&gt;X-Body&lt;/code&gt; as the key. At
the moment, the code above doesn’t do that. But you get the idea. The parsing
part of the snippet prepares the pairs it can find in the request and passes them one by one
to the encapsulated resource, mutating it until it gets to the final form.
A simple resource that always returns text might look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TextResource&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TextResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Length&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Body&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A resource that pays attention to the query string and dispatches
the request to other resources, depending on the path in the query,
might look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Resource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X-Query&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, world!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/balance&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;256&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/id&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yegor&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TextResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Not found!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalStateException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;This shouldn&amp;#39;t happen&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I hope you got the idea. The code above is rather sketchy, and the majority
of use cases are not implemented, but you can do that yourself, if you are
interested. The code is in the &lt;a href=&quot;https://github.com/yegor256/jpages&quot;&gt;yegor256/jpages&lt;/a&gt;
repository. Don’t hesitate to contribute with a pull request and make this
small framework real.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="java" /><category term="oop" /><summary type="html">How do you design a web application in Java? You install Spring, read the manual, create controllers, create some views, add some annotations, and it works. What would you do if there were no Spring (and no Ruby on Rails in Ruby, and no Symphony in PHP, and no … etc.)? Let’s try to create a web application from scratch, starting from a pure Java SDK and ending with a fully functional web app, covered by unit tests. I recorded a webinar no.42 about it just a few weeks ago, but this article should explain it all in even more detail.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/03/breakfast-at-tiffanys.jpg" /></entry><entry><title type="html">Logging Without a Static Logger</title><link href="https://www.yegor256.com/2019/03/19/logging-without-static-logger.html" rel="alternate" type="text/html" title="Logging Without a Static Logger" /><published>2019-03-19T00:00:00+00:00</published><updated>2019-03-19T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/03/19/logging-without-static-logger</id><content type="html" xml:base="https://www.yegor256.com/2019/03/19/logging-without-static-logger.html">&lt;p&gt;How do you organize logging in your applications? I mean web applications
or command line apps, or even mobile apps. I bet you have some global
variable or a singleton, known as &lt;code&gt;Logger&lt;/code&gt;, which has a few methods
like &lt;code&gt;info()&lt;/code&gt;, &lt;code&gt;error()&lt;/code&gt;, and &lt;code&gt;debug()&lt;/code&gt;. You configure it when the app
starts, or it configures itself via something like &lt;code&gt;log4j.properties&lt;/code&gt;,
and logs everything to the console or a file, or even a database. I was
doing exactly that, or &lt;a href=&quot;/2014/05/23/avoid-java-static-logger.html&quot;&gt;something very similar&lt;/a&gt;,
for many years, until I finally realized how wrong
this approach was. In one of my recent Ruby applications I did it all
differently, and since then I’m much happier than I was before.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;The Square (2017) by Ruben Östlund&quot; src=&quot;/images/2019/03/the-square.jpg&quot; longdesc=&quot;#1b0abaf5&quot; /&gt;&lt;figcaption id=&quot;1b0abaf5&quot;&gt;The Square (2017) by Ruben Östlund&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Well, if your application is simple and has almost no unit or integration
tests, you will be doing just fine with a static logger, which in essence
is a global variable. However, as we &lt;a href=&quot;/2018/07/03/global-variables.html&quot;&gt;discussed before&lt;/a&gt;,
global variables are evil. What can go wrong if we use a static logger?
Or, in other words, as one of my friends used to say, what exactly is the problem
we are going to solve? Basically, there are two problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;First, with a single global logger you will have a hard time
writing a unit test to check whether your app is actually logging
things correctly. Even if you intercept the log stream, there will be
a lot of noise, coming from other threads and other tests. It’s not
an unsolvable problem, but its solution adds complexity to your tests.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Second, when you decide to show a selected part of the log to your
end-user, you will have to do a lot of coding just in order to separate
what belongs to the user and what does not, especially in a multi-threaded
environment. You’re lucky if it’s Java and you have thread groups,
but in Ruby, for example, there is no such thing and you will have to
find some workaround.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To overcome them both, in &lt;a href=&quot;https://github.com/zold-io/zold&quot;&gt;Zold&lt;/a&gt;,
a Ruby command line application, I decided to pass &lt;code&gt;log&lt;/code&gt; as a variable
to all classes that need any logging. In Ruby it’s easier than in Java,
because they have &lt;a href=&quot;https://stackoverflow.com/questions/35747905&quot;&gt;optional&lt;/a&gt;
parameters. Look at &lt;a href=&quot;https://github.com/zold-io/zold/blob/0.26.17/lib/zold/commands/list.rb&quot;&gt;this class&lt;/a&gt;,
for example (it’s a simplified version, of course):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Zold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;List&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;wallets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@wallets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wallets&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@wallets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@wallets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;acq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wallet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wallet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This class is supposed to list all wallets in the current directory and print
their balances to the log, which &lt;em&gt;in some cases&lt;/em&gt; will be the console. However,
when this class is called from a web application, the destination of the
print is a temporary file, which is later rendered on the web page. In unit
tests it can be something else, which has to capture everything that is sent
to the log and then delivered to the unit test.&lt;/p&gt;

&lt;p&gt;As you see, the default value of the &lt;code&gt;log&lt;/code&gt; is &lt;code&gt;Log::NULL&lt;/code&gt;, which is the
constant I had to define myself, as a default logger, which doesn’t log
anything anywhere. By default, this class will log nothing. It will quietly
check all the balances of all the wallets and print nothing. Well, it will print,
but nobody will see that.&lt;/p&gt;

&lt;p&gt;In a unit test I create an object with a few methods like &lt;code&gt;debug()&lt;/code&gt;, &lt;code&gt;info()&lt;/code&gt;,
etc. and pass it to the instance of class &lt;code&gt;Zold::List&lt;/code&gt;, which I’m testing.
In other words, it’s a fake/mock version of the logger, which I use to
capture everything that &lt;code&gt;Zold::List&lt;/code&gt; sends out. Then I can check what’s there.&lt;/p&gt;

&lt;p&gt;Am I saying obvious things here? If so, why do we
&lt;a href=&quot;/2014/05/23/avoid-java-static-logger.html&quot;&gt;still have&lt;/a&gt; static
loggers everywhere in Java, Ruby, PHP, C#, etc?
Anyway, I recommend you use an injectable logging dependency instead.&lt;/p&gt;

&lt;p&gt;And yeah, by the way, I’m sure you noticed the change in the name. It’s not
a &lt;code&gt;logger&lt;/code&gt; anymore, it’s &lt;code&gt;log&lt;/code&gt;. I’m sure you know
&lt;a href=&quot;/2015/03/09/objects-end-with-er.html&quot;&gt;why&lt;/a&gt;.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><summary type="html">How do you organize logging in your applications? I mean web applications or command line apps, or even mobile apps. I bet you have some global variable or a singleton, known as Logger, which has a few methods like info(), error(), and debug(). You configure it when the app starts, or it configures itself via something like log4j.properties, and logs everything to the console or a file, or even a database. I was doing exactly that, or something very similar, for many years, until I finally realized how wrong this approach was. In one of my recent Ruby applications I did it all differently, and since then I’m much happier than I was before.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/03/the-square.jpg" /></entry><entry><title type="html">How Data Visibility Hurts Maintainability</title><link href="https://www.yegor256.com/2019/03/12/data-and-maintainability.html" rel="alternate" type="text/html" title="How Data Visibility Hurts Maintainability" /><published>2019-03-12T00:00:00+00:00</published><updated>2019-03-12T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/03/12/data-and-maintainability</id><content type="html" xml:base="https://www.yegor256.com/2019/03/12/data-and-maintainability.html">&lt;p&gt;I’ve been writing &lt;a href=&quot;/tags/oop.html&quot;&gt;so much&lt;/a&gt; about object-oriented programming and its
&lt;a href=&quot;/2016/02/03/design-patterns-and-anti-patterns.html&quot;&gt;pitfalls&lt;/a&gt;,
claiming that most of the design patterns and “good practices” which we are accustomed to
are actually &lt;a href=&quot;/2014/09/10/anti-patterns-in-oop.html&quot;&gt;wrong and hurtful&lt;/a&gt;,
that I totally forgot to explain the bigger picture problem.
Someone &lt;a href=&quot;https://www.yegor256.com/2016/11/21/naked-data.html#comment-3879044054&quot;&gt;asked&lt;/a&gt;
me some time ago in the &lt;a href=&quot;/2016/11/21/naked-data.html&quot;&gt;blog post&lt;/a&gt;
about “naked” data: What is the problem we are solving and why exactly does maintainability
suffer if we don’t &lt;em&gt;encapsulate&lt;/em&gt; our data enough? Here is the answer.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Taboo (2017) by Tom Hardy, et al.&quot; src=&quot;/images/2019/03/taboo.jpg&quot; longdesc=&quot;#ef452fbf&quot; /&gt;&lt;figcaption id=&quot;ef452fbf&quot;&gt;Taboo (2017) by Tom Hardy, et al.&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I re-read the first few pages of &lt;a href=&quot;/elegant-objects.html&quot;&gt;&lt;em&gt;Elegant Objects, Volume 1&lt;/em&gt;&lt;/a&gt;,
my book entirely dedicated to the problem of modern object-oriented programming
&lt;a href=&quot;/2016/08/15/what-is-wrong-object-oriented-programming.html&quot;&gt;flaws&lt;/a&gt;,
and found out that maintainability is directly mentioned there:
“The main goal I’m trying to achieve with this writing is to
increase the &lt;em&gt;maintainability&lt;/em&gt; of your code,” and then it also explains
that maintainability is “the time required for me to understand your code.” You
&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/141005&quot;&gt;can’t argue with that&lt;/a&gt;,
but the question remains: how does the lack of “true” object-orientation and proper encapsulation
hurt readability?&lt;/p&gt;

&lt;p&gt;I don’t know the exact answer, but here is my own version, derived from
my years of coding and suffering: &lt;em&gt;smaller scope&lt;/em&gt; is the key success factor of
better maintainability, and lack of encapsulation leads to a larger scope. You know what
&lt;a href=&quot;https://en.wikipedia.org/wiki/Scope_%28computer_science%29&quot;&gt;scope of visibility&lt;/a&gt;
is, right? Let’s take this C code as an example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * 2 = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * 3 = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are two variables &lt;code&gt;i&lt;/code&gt;, visible in two different &lt;code&gt;for&lt;/code&gt; loops, two
different scopes of visibility. The &lt;em&gt;size&lt;/em&gt; of each scope is three lines of code.
How about this code, doing exactly the same:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * 2 = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * 3 = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, the scope of visibility of &lt;code&gt;i&lt;/code&gt; is ten lines of code. The code works as well
as in the first snippet, but its maintainability is lower, because in order
to understand what’s going on and how to modify it, I need more time. I need
to read a 10-line block of code, instead of two 3-line blocks.
I need to understand the entire method &lt;code&gt;print()&lt;/code&gt; before I can start making any modifications.
I need to understand the lifetime algorithm of that poor &lt;code&gt;i&lt;/code&gt; and why,
for example, it gets decremented by 10 instead of being reassigned to zero—this is
the surprise previous programmers left for me. Maybe they were not aware of
the existence of &lt;code&gt;for&lt;/code&gt; loops?&lt;/p&gt;

&lt;p&gt;It’s obvious that the first snippet is better than the second one.
The question is how do we &lt;em&gt;make&lt;/em&gt; programmers write code the way the first
snippet is written and make the scope of each variable and function smaller?
We can teach them, write books for them, convince them, train them, or maybe
even punish them for larger scope and less readable code, but if the
programming language itself doesn’t prevent these large scopes from happening,
nothing will really help. It’s better to invent a programming language or
an entire programming paradigm to make it harder, or impossible, to grow the scope.&lt;/p&gt;

&lt;p&gt;For example, the largest scope you can imagine in C/C++, Java, Ruby and many other
modern languages is the &lt;a href=&quot;/2018/07/03/global-variables.html&quot;&gt;global&lt;/a&gt;
one, for example here:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * 2 = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now the variable &lt;code&gt;i&lt;/code&gt; is visible not only inside the function &lt;code&gt;print()&lt;/code&gt; but
in &lt;del&gt;many&lt;/del&gt; all other places of the application we develop. The scope
of visibility of &lt;code&gt;i&lt;/code&gt; is the size of the entire code base. Needless to say that
makes the code of function &lt;code&gt;print()&lt;/code&gt; &lt;a href=&quot;/2018/07/03/global-variables.html&quot;&gt;very unreadable&lt;/a&gt;.
I simply can’t know what value to expect in &lt;code&gt;i&lt;/code&gt; when the execution of &lt;code&gt;print()&lt;/code&gt; starts—I
have to go through the entire code base to find it out. If it’s a small app, maybe
I will manage, but if it’s a large piece of software, I will have big troubles.
So, how about we create a programming language, which will not allow global
variables? This will solve the problem. Programmers will have no technical
ability to define them and their scopes will inevitably be smaller.&lt;/p&gt;

&lt;p&gt;I believe that objects &lt;a href=&quot;/2017/12/12/alan-kay-was-wrong.html&quot;&gt;were invented&lt;/a&gt;
exactly to do that:
to &lt;em&gt;force&lt;/em&gt; programmers to keep their scopes of visibility smaller. Well, actually,
functions and sub-routines were invented for that too, but with a less
strong emphasis on the “force” part, since they could co-exist with code
parts that were not decomposed yet. To the contrary, objects were supposed to be first-class
citizens of an object world, communicating with objects only.&lt;/p&gt;

&lt;p&gt;They were.&lt;/p&gt;

&lt;p&gt;But then C++ showed up and ruined everything.&lt;/p&gt;

&lt;p&gt;Let’s try to introduce an object to our C snippet, the way
&lt;del&gt;most&lt;/del&gt; some C++ programmers would do it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Idx&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And then:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Idx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * 2 = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * 3 = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What changed? Not much. Instead of a plain “scalar” variable &lt;code&gt;i&lt;/code&gt; we have
an “object,” which stores an integer value inside and provides a few methods
to access it and modify it. Did it help us minimize the scope? Not at all. Moreover,
the length of &lt;code&gt;print()&lt;/code&gt; is now even a few lines longer. But now we have
an object and can call our code object-oriented!&lt;/p&gt;

&lt;p&gt;This is how most of the “objects” are used nowadays, mostly thanks to C++: they are just data holders,
while the real users of the data are still outside of them. The object &lt;code&gt;Idx&lt;/code&gt;
doesn’t know anything about the real purpose of the data it holds. It doesn’t
know that its &lt;code&gt;v&lt;/code&gt; is used as a step counter and that it gets multiplied by
something before printing some text. &lt;code&gt;Idx&lt;/code&gt; is a data holder, while the real
logic is outside of it.&lt;/p&gt;

&lt;p&gt;The maintainability problem is not solved, the scope
is not smaller, the complexity of the code is not reduced. Moreover, it is
increased, because now, in order to understand how &lt;code&gt;print()&lt;/code&gt; works, I have
to know what is inside the &lt;code&gt;Idx&lt;/code&gt;. The object paradigm in this particular
example made a promise to take part of the problem and let me never worry about it,
but in reality it only made the problem larger, by giving me back two problems:
&lt;code&gt;print()&lt;/code&gt; and &lt;code&gt;Idx&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;badge&quot;&gt;&lt;a href=&quot;http://amzn.to/2uMlANB&quot;&gt;&lt;img src=&quot;/images/2019/03/bjarne-stroustrup-book.jpg&quot; style=&quot;width:96px;max-width:100%;&quot; alt=&quot;badge&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Why is this thanks to C++? Because C++ added object-orientation on top of C procedural
programming ideas, never even thinking about prohibiting some of them, to &lt;em&gt;force&lt;/em&gt;
programmers to write objects the way they are supposed to be written: as black
boxes that encapsulate everything they need and never allow anyone from the
outside to even &lt;em&gt;know&lt;/em&gt; what’s inside! C++ didn’t even make an attempt to
switch the paradigm from procedures and variables to objects and methods.
&lt;a href=&quot;https://en.wikipedia.org/wiki/Bjarne_Stroustrup&quot;&gt;Bjarne Stroustrup&lt;/a&gt;, the creator of C++, just gave programmers
methods and classes and said: “Use them, they are more convenient
than variables, … or maybe not, sometimes, … I don’t know”
(I’m not sure it’s his quote, but I believe that it’s very close to what he
had in mind). Read &lt;a href=&quot;http://amzn.to/2uMlANB&quot;&gt;his book&lt;/a&gt;, and you will see how many pages are dedicated to
the philosophy of object orientation and how many to the technicalities of
operators and statements.&lt;/p&gt;

&lt;p&gt;A proper object-oriented solution would look different and would involve
true encapsulation, where data never “escapes” the borders of its owner. First,
here is how I would design &lt;code&gt;Idx&lt;/code&gt;… well, I would rename it first and call it
&lt;code&gt;Line&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;%d * %d = %d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And now here is the code of &lt;code&gt;print()&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Line&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you see, &lt;code&gt;print()&lt;/code&gt; doesn’t have any access to the internal data of &lt;code&gt;Line&lt;/code&gt;.
All &lt;code&gt;print()&lt;/code&gt; can do is ask the &lt;code&gt;Line&lt;/code&gt; to move forward and print itself. How exactly
this logic is implemented inside the &lt;code&gt;Line&lt;/code&gt;—nobody knows and nobody wants to know.
Since we don’t have any &lt;a href=&quot;/2014/09/16/getters-and-setters-are-evil.html&quot;&gt;getters&lt;/a&gt;
in the &lt;code&gt;Line&lt;/code&gt;, we can’t fetch the data out of it.&lt;/p&gt;

&lt;p&gt;Since we can’t get the data out, we can’t build any logic in the &lt;code&gt;print()&lt;/code&gt;. We
simply have nothing to work with, no data, no integers, no numbers. We can only
deal with objects, which don’t trust us with their internals. We can only &lt;em&gt;politely&lt;/em&gt; ask
them to do something for us. The scope of &lt;code&gt;print()&lt;/code&gt; is pretty small now and
very well &lt;em&gt;isolated&lt;/em&gt; from the internals of the &lt;code&gt;Line&lt;/code&gt;. Proper encapsulation
helped us achieve that: by not exposing the internals of the &lt;code&gt;Line&lt;/code&gt; we made
it impossible for anyone to invite themselves into its own scope. The &lt;code&gt;print()&lt;/code&gt; simply can’t
do anything with the data encapsulated by the &lt;code&gt;Line&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Thus, the more visible and accessible the data is,
the lower the maintainability.&lt;/p&gt;

&lt;p&gt;The very idea of object-oriented programming is based on encapsulation, which
doesn’t mean just restricting the ability to modify object attributes from the
outside, but also prohibiting everyone from reading those attributes.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;What is wrong with this Java object? &lt;a href=&quot;https://twitter.com/hashtag/elegantobjects?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#elegantobjects&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/java?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#java&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;final class Time {&lt;br /&gt;  int getHours();&lt;br /&gt;  int getMinutes();&lt;br /&gt;  int getSeconds();&lt;br /&gt;}&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1109750701285142533?ref_src=twsrc%5Etfw&quot;&gt;March 24, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="oop" /><summary type="html">I’ve been writing so much about object-oriented programming and its pitfalls, claiming that most of the design patterns and “good practices” which we are accustomed to are actually wrong and hurtful, that I totally forgot to explain the bigger picture problem. Someone asked me some time ago in the blog post about “naked” data: What is the problem we are solving and why exactly does maintainability suffer if we don’t encapsulate our data enough? Here is the answer.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/03/taboo.jpg" /></entry><entry><title type="html">Why I Want to Live in Silicon Valley</title><link href="https://www.yegor256.com/2019/02/12/silicon-valley-benefits.html" rel="alternate" type="text/html" title="Why I Want to Live in Silicon Valley" /><published>2019-02-12T00:00:00+00:00</published><updated>2019-02-12T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/02/12/silicon-valley-benefits</id><content type="html" xml:base="https://www.yegor256.com/2019/02/12/silicon-valley-benefits.html">&lt;p&gt;You remember my blog post about
&lt;a href=&quot;/2018/12/18/silicon-valley-criticism.html&quot;&gt;&lt;em&gt;Why I Don’t Want to Live in Silicon Valley&lt;/em&gt;&lt;/a&gt;,
don’t you? Read it first if you haven’t already. The gist of it is
that Silicon Valley is a place with a lot of troubles. No one should want
to live there, according to that previous post, right? That is what
many of my readers concluded, but they were wrong. Despite the problems,
the place is definitely unique and there are a lot of reasons why
you may want to consider it as a great place to live, for a few years
at least, especially if you are in the tech business.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Гостья из будущего (1985) by Кир Булычев&quot; src=&quot;/images/2019/02/gostya-iz-budushego.jpg&quot; longdesc=&quot;#ee65f478&quot; /&gt;&lt;figcaption id=&quot;ee65f478&quot;&gt;Гостья из будущего (1985) by Кир Булычев&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;I lived there for about five years and speak from my own experience:
&lt;a href=&quot;/2018/12/18/silicon-valley-criticism.html&quot;&gt;it is&lt;/a&gt;
distasteful, insanely correct, unappetizing, insane, positive,
shallow, dangerous, expensive, boring, and conservative. However, aside from
that:&lt;/p&gt;

&lt;h2 id=&quot;it-is-rich&quot;&gt;It is Rich&lt;/h2&gt;

&lt;p&gt;The state of California is the biggest generator of GDP in the US, almost
&lt;a href=&quot;https://en.wikipedia.org/wiki/Comparison_between_U.S._states_and_countries_by_GDP_%28nominal%29&quot;&gt;80% larger&lt;/a&gt;
than second place Texas, mostly thanks
to Hollywood and Silicon Valley.
California &lt;a href=&quot;https://www.forbes.com/sites/katiasavchuk/2015/03/04/california-has-more-billionaires-than-every-country-except-the-u-s-and-china/&quot;&gt;has more billionaires&lt;/a&gt;
than any country (except the US and China),
and half of them live in the Bay Area and Silicon Valley.&lt;/p&gt;

&lt;p&gt;You can smell money everywhere. Salaries are overblown: you can easily make
&lt;a href=&quot;https://spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/what-silicon-valley-tech-jobs-pay-the-highest-salaries&quot;&gt;$150,000&lt;/a&gt;
a year (which is around $9K per month, after taxes) being a decent Java developer. Being
a part-time software consultant you can charge $200/hour and it won’t really
surprise anyone.&lt;/p&gt;

&lt;p&gt;When you move there the feelings you get out of a hundred-dollar-bill change: It becomes
a smaller value for you, in just a few weeks of staying in the Bay Area. Along
with that, your expectations of your own financial results go up and you
realize that you either become a millionaire ASAP or your life is wasted.
For some this can be depressing, but for others it’s a great push forward.
I’ve experienced both.&lt;/p&gt;

&lt;h2 id=&quot;it-is-easy-going&quot;&gt;It is Easy Going&lt;/h2&gt;

&lt;p&gt;Either it’s a cultural thing for the whole of the US or something specific
to the West Coast: They don’t tend to make long-term, tight connections.
“Nothing personal, it’s strictly business,” seems to be the motto of most people
there. They do business with you, they may invite you to their houses,
share a lunch with you, introduce you to the members of their families, and
then… forget your name once the business is over. This attitude may look cold and
rude to someone with a sensitive soul, but if you are focused on doing
business and making money, you will feel way more comfortable than in,
say, Russia.&lt;/p&gt;

&lt;p&gt;You won’t need to build a sophisticated relationship before someone can
do business with you, as is the case, for example, in Europe. In America
they are ready to shake hands at the first meeting, but they are also
ready to walk out of the deal very quickly when business interests
change.&lt;/p&gt;

&lt;h2 id=&quot;it-is-work-focused&quot;&gt;It is Work Focused&lt;/h2&gt;

&lt;p&gt;Try to visit any Starbucks in the Bay Area, at say 11pm (if it’s open).
There will be many people (if not most of them) with laptops. I haven’t
seen anything like that in any place in the world and I’ve been in dozens
of them. Americans work and they work a lot. How productive they are is
a different story—but the smell of work is everywhere.&lt;/p&gt;

&lt;p&gt;For me it is very motivating, maybe because I’m a workaholic too. In, for example,
Amsterdam, where I lived for a few years, coffee shops are crowded with people
who are chilling, talking, drinking, smoking, and enjoying life. When you open
your laptop in an honest attempt to work for a few hours you feel that you
are an outsider, you are not in the system, you are doing something wrong.
Most likely your efforts won’t get you anywhere, since everybody around
you is 1) half-drunk and half-high, and, at the same time, 2) seems to be doing fine. In a few
days you ask yourself whether you are doing the right thing. Maybe to be
successful you should join them and close your laptop.&lt;/p&gt;

&lt;p&gt;In Silicon Valley you get the opposite feeling. If you don’t open your laptop
you quickly realize that you are an outsider, you are doing something wrong.
You are missing your opportunities, you need to catch up immediately, before
it’s too late. I even made an &lt;a href=&quot;https://www.instagram.com/p/BIBL9kRj4Qi/&quot;&gt;Instagram photo&lt;/a&gt;
to illustrate that.
It’s a regular cafe, a regular day, a regular crowd. It’s not a tech co-working space,
it’s a place where people are supposed to drink coffee. Have you seen anything
similar in any other places in the world? Tell me where.&lt;/p&gt;

&lt;h2 id=&quot;it-is-smart&quot;&gt;It is Smart&lt;/h2&gt;

&lt;p&gt;Maybe “smart” is not the right word here, but I couldn’t find
a better one. They are 1) narrow-minded and 2) properly educated—this seems
to be the most accurate description of what I felt there. First, they are
very tightly locked in their “knowledge frames”—they know what they know
and are not interested in hearing about anything else, which might
disturb their self-confidence in the body of knowledge they already possess.
Anything that even slightly contradicts the concepts they learned in school is
a “conspiracy theory” and, if you take it seriously “you are a weird
individual and we have to agree to disagree, bye!”&lt;/p&gt;

&lt;p&gt;On the other hand, they are properly educated in the areas they need to be in order to do
their work. Maybe this is thanks to Stanford, probably the best high school in the
world, or maybe it’s just an American thing: stay focused on what you need
and renounce everything else as “informational noise.” This is what they seem
to be doing: they may not know where Australia is or who exactly
&lt;a href=&quot;https://en.wikipedia.org/wiki/Che_Guevara&quot;&gt;Che Guevara&lt;/a&gt; was,
but they learn what matters for them.&lt;/p&gt;

&lt;p&gt;That’s why the first impression is that they are stupid. But later you realize
that they simply have a different attitude to information: it’s a tool for them,
not a source of fun. What is the source of fun for them? I have no idea.&lt;/p&gt;

&lt;h2 id=&quot;it-is-comfortable&quot;&gt;It is Comfortable&lt;/h2&gt;

&lt;p&gt;First, of course, is the climate. It’s one of the best in the world. Most of the
time it’s warm and sunny. Not in San Francisco, though, where it’s cold
and foggy most of the time. I have no idea why people live there.&lt;/p&gt;

&lt;p&gt;Second, it’s very spacious. The roads are wide and easy to navigate. The
traffic is mild (except a few highways in rush hours). Parking lots are huge
and the parking is toll-free (except SF down town). After crowded Europe
it feels like paradise: a very relaxed territory of comfort.&lt;/p&gt;

&lt;p&gt;Third, the public transport there is pretty good. It’s not perfect, as many
point out, but for me it was pretty cool. The train goes every 20-30 minutes and takes
you to the city (if you live in the Valley) in less than half an hour. Even though
the area is rather large, you can actually ride a bike everywhere,
like &lt;a href=&quot;https://www.instagram.com/p/8zc2GupGzq/&quot;&gt;I did&lt;/a&gt; for almost an entire year,
thanks to &lt;a href=&quot;https://www.instagram.com/p/9cbYGSJG9z/&quot;&gt;CalTrain&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;it-is-democratic&quot;&gt;It is Democratic&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.weeklystandard.com/michael-warren/will-america-in-10-years-look-like-california-does-today&quot;&gt;They say&lt;/a&gt;
California is the most democratic state, and it seems to be true.
You can feel it in the way people dress, live, and don’t show off, even
though some of them are pretty rich. You can easily meet a billionaire
in a coffee shop in the morning, and they won’t be accompanied by bodyguards
or a cortege of armed vehicles.&lt;/p&gt;

&lt;p&gt;On the one hand, it makes you very comfortable if you are a regular nobody
making money out of writing Java code. On the other, if you are financially
successful, nobody cares and it may hurt. You simply have nothing to spend
your wealth on. Even Vegas won’t help.&lt;/p&gt;

&lt;h2 id=&quot;it-is-immigrant-friendly&quot;&gt;It is Immigrant-Friendly&lt;/h2&gt;

&lt;p&gt;Very friendly. No matter where you are from, what the color of your skin is,
how old, bald, or ugly you are, you are very welcome! And it doesn’t matter
how bad your English is either. The majority of people you deal with are immigrants
to some extent. If they are not, their parents are. Very rarely do you meet
someone who is an American of the 2nd or 3rd generation, especially in tech.&lt;/p&gt;

&lt;p&gt;I’ve met people who have lived there for many years and still barely speak English.
Moreover, they don’t even want to learn it. They live and work in local
communities, having no problems making enough money and enjoying their lives.
I would recommend staying away from those local groups, though.&lt;/p&gt;

&lt;p&gt;One of the first questions they ask is “Where are you from?” Just for fun,
I asked the same question when I met new people in Ukraine. They
always laughed, not understanding what I meant by it.&lt;/p&gt;

&lt;h2 id=&quot;it-is-healthy&quot;&gt;It is Healthy&lt;/h2&gt;

&lt;p&gt;They pay a lot of attention to their health. The first indicator of
financial success for a person is that they talk a lot about yoga, gluten,
probiotics, cycling, and all that. Health is probably the biggest obsession of rich people
in Silicon Valley. Most of them &lt;a href=&quot;https://www.cdc.gov/statesystem/cigaretteuseadult.html&quot;&gt;don’t smoke&lt;/a&gt;
(but marijuana is a very popular product there, which some even grow at home).&lt;/p&gt;

&lt;p&gt;Sooner or later you catch up, buy an Apple Watch, start counting calories and paying attention
to the letter “V” which almost every restaurant attaches to vegetarian dishes
in their menus.&lt;/p&gt;

&lt;p&gt;You can even find &lt;a href=&quot;https://www.instagram.com/p/BGvbjHGpG2a/&quot;&gt;organic underwear&lt;/a&gt; there!&lt;/p&gt;

&lt;h2 id=&quot;it-is-motivating&quot;&gt;It is Motivating&lt;/h2&gt;

&lt;p&gt;The bottom line is that it’s a territory where you just can’t give up. You see
a lot of things going on around you and you want to be part of them. In most
cases you can’t, simply because the competition is very tight, but the feeling
of “drive” you get from everyone around you is exceptional. I wasn’t able to find
anything like that anywhere else.&lt;/p&gt;

&lt;p&gt;Thus, if you put two of my articles together, you will realize that the
best method is to live in Silicon Valley for some time and then move
somewhere else. Then come back again. You can’t stay there for an entire year, but you
start missing it very soon if you stay somewhere else for too long.
If you can afford to live in different countries, I would recommend trying
Silicon Valley for a change. It’s definitely an exceptional experience. Both
good and bad.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="mood" /><summary type="html">You remember my blog post about Why I Don’t Want to Live in Silicon Valley, don’t you? Read it first if you haven’t already. The gist of it is that Silicon Valley is a place with a lot of troubles. No one should want to live there, according to that previous post, right? That is what many of my readers concluded, but they were wrong. Despite the problems, the place is definitely unique and there are a lot of reasons why you may want to consider it as a great place to live, for a few years at least, especially if you are in the tech business.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/02/gostya-iz-budushego.jpg" /></entry><entry><title type="html">Zache: A Simple Ruby In-Memory Cache</title><link href="https://www.yegor256.com/2019/02/05/zache.html" rel="alternate" type="text/html" title="Zache: A Simple Ruby In-Memory Cache" /><published>2019-02-05T00:00:00+00:00</published><updated>2019-02-05T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/02/05/zache</id><content type="html" xml:base="https://www.yegor256.com/2019/02/05/zache.html">&lt;p&gt;A month ago I stumbled upon a problem: I wasn’t able to find a Ruby
gem which would do in-memory caching with the capability to expire
on timeout. After some quick research I decided to implement my own and called
it Zache (as in “zero cache,” since there is no back end). Here is how it works:&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;First, you create the cache:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;zache&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;zache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Zache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you fetch the value by the key, also providing the block which will
be executed if the key is absent or expired:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;lifetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Something very slow and expensive, which&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# we only want to execute once every 15 seconds.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, &lt;code&gt;:x&lt;/code&gt; is the key and &lt;code&gt;15&lt;/code&gt; is the number of seconds it will stay
in the cache, until it expires.&lt;/p&gt;

&lt;p&gt;It’s important to notice that the key won’t be deleted from the cache
automatically. It will stay there until the next call to &lt;code&gt;get(:x)&lt;/code&gt;. Only at
that moment will it be marked as “expired.” In order to clean up the
cache, you can call &lt;code&gt;zache.clean()&lt;/code&gt; and all expired keys will be deleted.&lt;/p&gt;

&lt;p&gt;You can do it regularly in a separate thread, for example, every minute:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thread&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;zache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Also, Zache, of course, is thread-safe.&lt;/p&gt;

&lt;p&gt;The gem is in this &lt;a href=&quot;https://github.com/yegor256/zache&quot;&gt;GitHub repository&lt;/a&gt;.
Feel free to report bugs, if you find them, or help us with additional features.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="ruby" /><summary type="html">A month ago I stumbled upon a problem: I wasn’t able to find a Ruby gem which would do in-memory caching with the capability to expire on timeout. After some quick research I decided to implement my own and called it Zache (as in “zero cache,” since there is no back end). Here is how it works:</summary></entry><entry><title type="html">How to Deploy Maven Artifacts to CloudRepo via Rultor</title><link href="https://www.yegor256.com/2019/02/03/cloudrepo.html" rel="alternate" type="text/html" title="How to Deploy Maven Artifacts to CloudRepo via Rultor" /><published>2019-02-03T00:00:00+00:00</published><updated>2019-02-03T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/02/03/cloudrepo</id><content type="html" xml:base="https://www.yegor256.com/2019/02/03/cloudrepo.html">&lt;figure class=&quot;badge&quot;&gt;&lt;a href=&quot;http://www.rultor.com&quot;&gt;&lt;img src=&quot;http://doc.rultor.com/images/logo.svg&quot; style=&quot;width:100px;max-width:100%;&quot; alt=&quot;badge&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;In my &lt;a href=&quot;/2015/09/07/maven-repository-amazon-s3.html&quot;&gt;previous article&lt;/a&gt;,
I described how to
set up a private Maven repository in Amazon S3 and deploy there via &lt;a href=&quot;http://www.rultor.com&quot;&gt;Rultor&lt;/a&gt;.
This is a great solution if you’re familiar with managing Amazon Web Services (AWS),
&lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;S3&lt;/a&gt;, and &lt;a href=&quot;https://aws.amazon.com/iam/&quot;&gt;AWS Identity and Access Management (IAM)&lt;/a&gt;.
However, if you’re not comfortable administering an AWS account and
all the related permissions, you may want to store your Apache Maven Artifacts
in some cloud based repository manager instead.
Here is how you make Rultor deploy your Maven dependencies to &lt;a href=&quot;https://www.cloudrepo.io/&quot;&gt;CloudRepo&lt;/a&gt;.
I wrote this blog post together with &lt;a href=&quot;https://www.linkedin.com/in/chrisshellenbarger&quot;&gt;Chris Shellenbarger&lt;/a&gt;,
their founder.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Both repository managers and S3 will allow your build tools
to store and retrieve your software libraries in a remote
repository or bucket.
However, repository managers take care of a lot of the work
that you’d have to manage yourself with the S3 solution.&lt;/p&gt;

&lt;p&gt;While AWS is quite robust and can be configured to do everything
a repository manager can, there are use cases that work directly
out of the box when you choose a fully managed solution, like:
User/Group Administration, Maven Specific Views, Webhooks, Notifications,
Access and Audit Logs, Fully Managed Security, etc.
Simply put, they are not just storages of JAR files, but Maven repositories
in cloud.&lt;/p&gt;

&lt;p&gt;A fully managed, cloud hosted solution will cost you a monthly subscription
fee of some sort. At the moment of writing they charge $9 per month
&lt;a href=&quot;https://www.cloudrepo.io/pricing.html&quot;&gt;and up&lt;/a&gt;. They are free for open source,
but I don’t see why you would need them if you can use
&lt;a href=&quot;/2014/08/19/how-to-release-to-maven-central.html&quot;&gt;Maven Central&lt;/a&gt;.
The good news is that they are offering a special discount for my readers:
the first 90 days are free, versus the standard 14. This is effectively
a 25% discount off of your first year.
Simply &lt;a href=&quot;mailto:support@cloudrepo.io&quot;&gt;shoot them an email&lt;/a&gt; when your account is created
and they’ll take care of you (don’t forget to mention me, to get the discount).&lt;/p&gt;

&lt;figure class=&quot;badge&quot;&gt;&lt;a href=&quot;http://www.cloudrepo.io&quot;&gt;&lt;img src=&quot;/images/2019/02/cloudrepo.png&quot; style=&quot;width:100px;max-width:100%;&quot; alt=&quot;badge&quot; /&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Assuming you have created an account with
CloudRepo and &lt;a href=&quot;https://www.cloudrepo.io/docs/maven.html#pre-requisites&quot;&gt;setup both a user and maven repository&lt;/a&gt;,
deploying to CloudRepo requires two steps on the client side:
1) Configure a &lt;code&gt;settings.xml&lt;/code&gt; file with credentials, and
2) Add your repository to your &lt;code&gt;pom.xml&lt;/code&gt; file’s &lt;code&gt;&amp;lt;distributionManagement&amp;gt;&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;The default location for the &lt;code&gt;settings.xml&lt;/code&gt; file is in your
&lt;code&gt;~/.m2&lt;/code&gt; directory.  Edit this file and ensure that you have
a &lt;code&gt;&amp;lt;server&amp;gt;&lt;/code&gt; entry as seen below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;settings&amp;gt;
  &amp;lt;servers&amp;gt;
    &amp;lt;server&amp;gt;
      &amp;lt;id&amp;gt;io.cloudrepo&amp;lt;/id&amp;gt;
      &amp;lt;username&amp;gt;yegor256@gmail.com&amp;lt;/username&amp;gt;
      &amp;lt;password&amp;gt;my-secret&amp;lt;/password&amp;gt;
    &amp;lt;/server&amp;gt;
  &amp;lt;/servers&amp;gt;
&amp;lt;/settings&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By declaring a &lt;code&gt;server&lt;/code&gt; and specifying an &lt;code&gt;id&lt;/code&gt;, you can reference the &lt;code&gt;id&lt;/code&gt;
from within your Maven POM files.  When Maven attempts to
authenticate against a server it will look for a corresponding
key in the &lt;code&gt;settings.xml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;If you’re worried about storing your password in plaintext
on your filesystem, check how Maven &lt;a href=&quot;https://maven.apache.org/guides/mini/guide-encryption.html&quot;&gt;recommends&lt;/a&gt;
fixing that.&lt;/p&gt;

&lt;p&gt;Now that your credentials have been set, you must
point your &lt;a href=&quot;https://maven.apache.org/guides/introduction/introduction-to-the-pom.html&quot;&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;/a&gt;
at your CloudRepo repository.
Add a new &lt;code&gt;&amp;lt;repository&amp;gt;&lt;/code&gt; element to the &lt;code&gt;&amp;lt;distributionManagement&amp;gt;&lt;/code&gt; (to upload them) section of your &lt;code&gt;pom.xml&lt;/code&gt;
and to the &lt;code&gt;&amp;lt;repositories&amp;gt;&lt;/code&gt; (to download them):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;project&amp;gt;
  [...]
  &amp;lt;repositories&amp;gt;
    &amp;lt;repository&amp;gt;
      &amp;lt;id&amp;gt;io.cloudrepo&amp;lt;/id&amp;gt;
      &amp;lt;url&amp;gt;https://[your-org-name].mycloudrepo.io/repositories/[your-repository-name]&amp;lt;/url&amp;gt;
    &amp;lt;/repository&amp;gt;
  &amp;lt;/repositories&amp;gt;
  [...]
  &amp;lt;distributionManagement&amp;gt;
    &amp;lt;repository&amp;gt;
      &amp;lt;id&amp;gt;io.cloudrepo&amp;lt;/id&amp;gt;
      &amp;lt;name&amp;gt;CloudRepo Maven Repository&amp;lt;/name&amp;gt;
      &amp;lt;url&amp;gt;https://[your-org-name].mycloudrepo.io/repositories/[your-repository-name]&amp;lt;/url&amp;gt;
    &amp;lt;/repository&amp;gt;
  &amp;lt;/distributionManagement&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you have a build working in your local environment, you need to
deploy it to production with Rultor.
First, you’ll need to store your credentials in Git so that Rultor
can access them at build and deploy time.   However, it
is very important to &lt;em&gt;never&lt;/em&gt; store your credentials in plaintext in version control
(substitute the name of your GitHub project with &lt;code&gt;my/project&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gem install rultor
$ rultor encrypt -p my/project settings.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates an encrypted version of your settings file with
the name &lt;code&gt;settings.xml.asc&lt;/code&gt;.  Add this file to the root directory
of your project, then commit and push. It is safe.
Only Rultor has the keys to decrypt this file so even if your source
code is exposed to others, your credentials will be kept safe.&lt;/p&gt;

&lt;p&gt;To enable Rultor, add a &lt;code&gt;.rultor.yml&lt;/code&gt; file to the root directory
of your project with the following contents:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-yaml&quot;&gt;decrypt:
  settings.xml: &quot;repo/settings.xml.asc&quot;
deploy:
  script: |
    mvn clean deploy --settings ../settings.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more information on the &lt;code&gt;.rultor.yml&lt;/code&gt; file,
check the &lt;a href=&quot;http://doc.rultor.com/reference.html&quot;&gt;Rultor Reference Page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that everything is configured you should be able to deploy to
CloudRepo with Rultor by executing the &lt;code&gt;@rultor deploy&lt;/code&gt; command.
Wait for the response and Rultor will &lt;a href=&quot;/2014/07/24/rultor-automated-merging.html&quot;&gt;take care&lt;/a&gt;
of all the rest.&lt;/p&gt;

&lt;p&gt;That’s it!&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="devops" /><category term="maven" /><category term="java" /><summary type="html">In my previous article, I described how to set up a private Maven repository in Amazon S3 and deploy there via Rultor. This is a great solution if you’re familiar with managing Amazon Web Services (AWS), S3, and AWS Identity and Access Management (IAM). However, if you’re not comfortable administering an AWS account and all the related permissions, you may want to store your Apache Maven Artifacts in some cloud based repository manager instead. Here is how you make Rultor deploy your Maven dependencies to CloudRepo. I wrote this blog post together with Chris Shellenbarger, their founder.</summary></entry><entry><title type="html">My Recipe Against Dependency Hell</title><link href="https://www.yegor256.com/2019/01/29/dependency-hell.html" rel="alternate" type="text/html" title="My Recipe Against Dependency Hell" /><published>2019-01-29T00:00:00+00:00</published><updated>2019-01-29T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/01/29/dependency-hell</id><content type="html" xml:base="https://www.yegor256.com/2019/01/29/dependency-hell.html">&lt;p&gt;Do you specify exact versions of your dependencies? I mean, when your
software package depends on another one, do you write down, in your &lt;code&gt;pom.xml&lt;/code&gt;,
&lt;code&gt;Gruntfile&lt;/code&gt;, &lt;code&gt;Gemfile&lt;/code&gt;, or what have you, its version as &lt;code&gt;1.13.5&lt;/code&gt; or just
&lt;code&gt;1.+&lt;/code&gt;? I always &lt;a href=&quot;https://twitter.com/yegor256/status/1059856548112068608&quot;&gt;thought&lt;/a&gt;
that it was better to use exact version numbers,
to avoid the so called &lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_hell&quot;&gt;dependency hell&lt;/a&gt;,
and &lt;a href=&quot;https://blog.danlew.net/2015/09/09/dont-use-dynamic-versions-for-your-dependencies/&quot;&gt;I was not alone&lt;/a&gt;.
However, very soon I &lt;a href=&quot;https://twitter.com/yegor256/status/1060538705260265474&quot;&gt;realized&lt;/a&gt;
that dynamic versions, like &lt;code&gt;1.+&lt;/code&gt;, give more flexibility.
Just a few weeks ago I realized that neither approach
is right and found myself a hybrid formula. No suprise, I again saw that
&lt;a href=&quot;https://brock.io/post/repeatable_android_builds/&quot;&gt;I wasn’t alone&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Sin noticias de Dios (2001) by Agustín Díaz Yanes&quot; src=&quot;/images/2019/01/sin-noticias-de-dios.jpg&quot; longdesc=&quot;#9005641b&quot; /&gt;&lt;figcaption id=&quot;9005641b&quot;&gt;Sin noticias de Dios (2001) by Agustín Díaz Yanes&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;First, let me explain what’s wrong with fixed dependencies.&lt;/p&gt;

&lt;p&gt;Say I create a library X, which depends on, for example, a logging
facility, which is a third-party library, not mine. Thus my library X has
a &lt;em&gt;dependency&lt;/em&gt;. The logging library has a version number, such as
&lt;code&gt;1.13.5&lt;/code&gt;. I put this text into the &lt;code&gt;pom.xml&lt;/code&gt; file of X:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.example&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;log-me&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.13.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Many advocates of fixed dependencies argue that it’s very important
to stick to the version &lt;code&gt;1.13.5&lt;/code&gt;, instead of using a more flexible dynamic
one: &lt;code&gt;1.13)&lt;/code&gt; (i.e. any version, provided it is &lt;code&gt;1.13&lt;/code&gt; or newer).
Why? Because future versions may introduce something that
will break the build of X. They may change interfaces, rename classes or methods,
or delete something that I’m using. You never know what the authors of this
&lt;code&gt;log-me&lt;/code&gt; library might do. That’s why it’s better to hard-wire ourselves to &lt;code&gt;1.13.5&lt;/code&gt; and
call it a day.&lt;/p&gt;

&lt;p&gt;This is true.&lt;/p&gt;

&lt;p&gt;But.&lt;/p&gt;

&lt;p&gt;What if the library X is used by another library Y, which also depends on
&lt;code&gt;log-me&lt;/code&gt; but needs version &lt;code&gt;1.14.1&lt;/code&gt;. Boom! There will be a conflict
in library Y: Maven, the package manager, won’t be able to decide
which version to use. It will be necessary to resolve the conflict somehow.
In the case of Maven it’s resolvable, in the case of, for example,
&lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt;, it’s not (to my knowledge).&lt;/p&gt;

&lt;p&gt;To resolve this problem, library Y will have to explicitly say which version
has to be used. But it can’t be sure that &lt;code&gt;1.14.1&lt;/code&gt; will work correctly with
library X. To confirm that it does, it would have to be tested by the authors of library
X. So the best the creators of library Y can do is to try it and hope
for the best. With other build tools, like Rake, the authors will have no choice,
but to ask the authors of library X to upgrade to &lt;code&gt;1.14.1&lt;/code&gt; and release
a new version. Then, library Y will be able to use library X.&lt;/p&gt;

&lt;p&gt;This problem would not exist if library X depended on &lt;code&gt;1.13&lt;/code&gt; instead.
But, as I mentioned above, in that case its authors would be planting a time bomb—eventually
one of the future versions will definitely break the build.&lt;/p&gt;

&lt;p&gt;So what is the solution?&lt;/p&gt;

&lt;p&gt;Here is my formula: If you trust the authors of the library, use dynamic versioning;
if you don’t, use a fixed version.&lt;/p&gt;

&lt;p&gt;What I mean is, do you trust that they are professional enough to think about
backward compatibility and to follow the principles of &lt;a href=&quot;https://semver.org/&quot;&gt;semantic versioning&lt;/a&gt;?
If they are careful enough to not delete or modify something
that may affect future versions without also changing the major number of the version,
then you can trust them. How do you know who to trust? I don’t trust anyone, except
my own libraries and a very small number of other libraries which I have reviewed in GitHub and checked
the quality of their repositories.&lt;/p&gt;

&lt;p&gt;Of course, you can’t fully trust anyone, but this is the formula I
have for myself now. You can see how it works in this
&lt;a href=&quot;https://github.com/zold-io/zold/blob/master/zold.gemspec&quot;&gt;Gemfile&lt;/a&gt;, for example.
Pay attention to the version numbers. Those that start with &lt;code&gt;~&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;gt;=&lt;/code&gt; are dynamic,
while others are fixed. It’s a hybrid approach, but it works for me.&lt;/p&gt;

&lt;p&gt;Maybe it will help you too.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="devops" /><summary type="html">Do you specify exact versions of your dependencies? I mean, when your software package depends on another one, do you write down, in your pom.xml, Gruntfile, Gemfile, or what have you, its version as 1.13.5 or just 1.+? I always thought that it was better to use exact version numbers, to avoid the so called dependency hell, and I was not alone. However, very soon I realized that dynamic versions, like 1.+, give more flexibility. Just a few weeks ago I realized that neither approach is right and found myself a hybrid formula. No suprise, I again saw that I wasn’t alone.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/01/sin-noticias-de-dios.jpg" /></entry><entry><title type="html">10x Paychecks for 10x Programmers</title><link href="https://www.yegor256.com/2019/01/22/10x-paychecks.html" rel="alternate" type="text/html" title="10x Paychecks for 10x Programmers" /><published>2019-01-22T00:00:00+00:00</published><updated>2019-01-22T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/01/22/10x-paychecks</id><content type="html" xml:base="https://www.yegor256.com/2019/01/22/10x-paychecks.html">&lt;p&gt;You most definitely have heard about 10x programmers. The gist of this
folklore is that some of us coders are very effective (10 or even
&lt;a href=&quot;http://antirez.com/news/112&quot;&gt;100 times&lt;/a&gt; more so
than others), while the rest are just “normal.” It is definitely
&lt;a href=&quot;https://www.ybrikman.com/writing/2013/09/29/the-10x-developer-is-not-myth/&quot;&gt;not a myth&lt;/a&gt; though.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;Fargo (TV Series, Season 3) by Noah Hawley&quot; src=&quot;/images/2019/01/fargo.jpg&quot; longdesc=&quot;#e92b8140&quot; /&gt;&lt;figcaption id=&quot;e92b8140&quot;&gt;Fargo (TV Series, Season 3) by Noah Hawley&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Robert_L._Glass&quot;&gt;Robert Glass&lt;/a&gt; in his
&lt;a href=&quot;https://ieeexplore.ieee.org/document/922739/&quot;&gt;&lt;em&gt;Frequently Forgotten Fundamental Facts About Software Engineering&lt;/em&gt;&lt;/a&gt; (2001)
essay said that
“good programmers are up to 30 times better than
mediocre programmers, according to ‘individual differences’ research.”
I don’t know where he gets the number 30 from, and I seriously
doubt this number makes any sense, but the bottom line is valid:
there is a &lt;a href=&quot;/2014/10/26/hacker-vs-programmer-mentality.html&quot;&gt;huge distance&lt;/a&gt;
between people who just write code and those who do it &lt;em&gt;right&lt;/em&gt;.&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=mKZOuJ7AAas&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/mKZOuJ7AAas/mqdefault.jpg&quot; alt=&quot;YouTube video #mKZOuJ7AAas&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M30: Pay equality and smaller pay gap mean only one thing: the management is weak;
        6 February 2019.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Steve_McConnell&quot;&gt;Steve McConnell&lt;/a&gt;
in his &lt;a href=&quot;https://www.construx.com/blog/productivity-variations-among-software-developers-and-teams-the-origin-of-10x/&quot;&gt;blog post&lt;/a&gt;
analyzed a few studies of this subject and demonstrated that the actual
ratio varies from 2.6 up to 8. At the end of the post he asks
“Have you seen 10:1 differences in capabilities between different individuals?
Does 10:1 even cover the range?” Thus, the distance exists, it is pretty big,
but, obviously, we can’t claim an exact factor.&lt;/p&gt;

&lt;p&gt;But that is not my point.&lt;/p&gt;

&lt;p&gt;What I’m interested in is the pay gap between those 10x programmers
and everybody else. Let’s take a look at the salary report from PayScale
(I took this screenshot &lt;a href=&quot;https://www.payscale.com/research/US/Job=Computer_Programmer/Salary&quot;&gt;from here&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;unprintable&quot;&gt;&lt;img src=&quot;/images/2019/01/payscale.png&quot; itemprop=&quot;image&quot; style=&quot;width:600px;max-width:100%;&quot; alt=&quot;The figure&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;According to this report, the worst programmer gets $36K, while the best
one gets $100K, which confirms the 3:1 ratio. It’s far from 10:1, but if
we look more closely, the salary of $100K is far from being the best on the market.
For example, Indeed &lt;a href=&quot;https://spectrum.ieee.org/view-from-the-valley/at-work/tech-careers/what-silicon-valley-tech-jobs-pay-the-highest-salaries&quot;&gt;says&lt;/a&gt;
that in Silicon Valley senior software engineers make $160K, which
gives us the ratio of 4.4x. If we look even closer, we will see that
&lt;em&gt;some&lt;/em&gt; programmers &lt;a href=&quot;https://www.cnet.com/news/silicon-valley-talent-wars-engineers-come-get-your-250k-salary/&quot;&gt;make&lt;/a&gt;
$250K or even
&lt;a href=&quot;https://www.businessinsider.de/a-google-programmer-blew-off-a-500000-salary-at-startup-because-hes-already-making-3-million-every-year-2014-1?r=US&amp;amp;IR=T&quot;&gt;$3M&lt;/a&gt;,
which gives us the ratio of 83x. It seems that 10x programmers exist
&lt;em&gt;and&lt;/em&gt; they are paid according to their extraordinary talents—many times
more than their colleagues.&lt;/p&gt;

&lt;p&gt;Wait! Are they really?&lt;/p&gt;

&lt;p&gt;It seems that the ratio we just observed is motivated by location instead
of skills. The $36K programmers are not working together with $250K guys
in the same office, committing to the same code base. This is just not happening.
I can’t really prove it with statistics, but let’s hear from some companies.
&lt;a href=&quot;https://m.signalvnoise.com/how-we-pay-people-at-basecamp-f1d04f4f194b&quot;&gt;Basecamp&lt;/a&gt;:
“Everyone in the same role at the same level is paid the same.”
&lt;a href=&quot;https://open.buffer.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/&quot;&gt;Buffer&lt;/a&gt;:
“Master: 1.3X, Senior: +5%.”&lt;/p&gt;

&lt;p&gt;Simply put, companies attempt to minimize the spread in order to avoid
jealousy between programmers.
Buffer made a &lt;a href=&quot;http://www.inc.com/jeff-haden/inside-buffer-company-complete-transparency.html&quot;&gt;big splash&lt;/a&gt;
in the news, when they opened their salary calculating formula.
This is not typical for the industry.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;In order to make more, a programmer has to change location, company, or both.
&lt;/aside&gt;

&lt;p&gt;Even with ratios much smaller than 10x, employers tend to keep salaries
&lt;a href=&quot;https://www.forbes.com/sites/davidburkus/2016/02/02/why-do-we-keep-salaries-secret/&quot;&gt;secret&lt;/a&gt;.
According to &lt;a href=&quot;https://www.theatlantic.com/business/archive/2014/07/when-the-boss-says-dont-tell-your-coworkers-how-much-you-get-paid/374467/&quot;&gt;some studies&lt;/a&gt;,
“about half of American employees in all sectors are either explicitly
prohibited or strongly discouraged from discussing pay with their coworkers.”&lt;/p&gt;

&lt;p&gt;Putting all this together we can effectively assume that no matter how
large the difference in skills between regular programmers and 10x programmers
in the same project, they will get almost the same, or very similar, compensation.
In order to get more, a programmer has to change location, company,
or both.&lt;/p&gt;

&lt;p&gt;It seems very wrong!&lt;/p&gt;

&lt;p&gt;And it’s not resolvable, until we change the
&lt;a href=&quot;/2015/07/21/hourly-pay-modern-slavery.html&quot;&gt;payment model&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If we continue to pay programmers for their time, the pay inequality will always hurt.
For me, as a programmer, it will always be difficult or impossible to understand
why I’m getting, say, $100 dollars per day, while another Java developer
is getting $1,000. I will be jealous and no
&lt;a href=&quot;/2015/03/02/team-morale-myths-and-reality.html&quot;&gt;team building&lt;/a&gt;
exercise will be able to calm me down.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;A good programmer must make $25K+ a month, working remotely and part-time.
&lt;/aside&gt;

&lt;p&gt;However, when we start paying by result, what seems to be utopian now, will
become possible: 10x programmers will collect 10x paychecks. A good programmer
will get $250/hour, taking home $25,000 a month, working part-time. A bad
programmer will make $20/hour, taking home as much as … an average plumber,
a bus driver, or an electrician.&lt;/p&gt;

&lt;p&gt;A good programmer &lt;em&gt;must&lt;/em&gt; make $25K+ a month, working remotely and part-time.
This is how I see the future and this is what
&lt;a href=&quot;https://www.zerocracy.com&quot;&gt;Zerocracy&lt;/a&gt; is leading us to.&lt;/p&gt;

&lt;p&gt;In order to achieve that future we need to pay per result. This is the key
success factor. Until then, there is no hope that those
&lt;a href=&quot;/2015/10/06/how-to-be-good-office-slave.html&quot;&gt;office slaves&lt;/a&gt; who
claim to be 10x programmers will ever make what they truly deserve.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="zerocracy" /><category term="management" /><summary type="html">You most definitely have heard about 10x programmers. The gist of this folklore is that some of us coders are very effective (10 or even 100 times more so than others), while the rest are just “normal.” It is definitely not a myth though.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/01/fargo.jpg" /></entry><entry><title type="html">What if the Architect is Wrong?</title><link href="https://www.yegor256.com/2019/01/15/what-if-architect-is-wrong.html" rel="alternate" type="text/html" title="What if the Architect is Wrong?" /><published>2019-01-15T00:00:00+00:00</published><updated>2019-01-15T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/01/15/what-if-architect-is-wrong</id><content type="html" xml:base="https://www.yegor256.com/2019/01/15/what-if-architect-is-wrong.html">&lt;p&gt;You most probably know what I think about the
&lt;a href=&quot;/2014/10/12/who-is-software-architect.html&quot;&gt;architect&lt;/a&gt;
role on a software project—it’s that of a &lt;em&gt;dictator&lt;/em&gt; who makes all technical decisions
and who bears the entire responsibility for the final result. I &lt;a href=&quot;/2014/10/12/who-is-software-architect.html&quot;&gt;wrote&lt;/a&gt;
about it and even gave a talk &lt;a href=&quot;https://www.youtube.com/watch?v=R1lA7pN60xg&quot;&gt;&lt;em&gt;Who is a Software Architect?&lt;/em&gt;&lt;/a&gt;
at BuildStuff in 2016. However, the obvious question you may ask is:
What happens if the architect is wrong? Does it mean the entire project
is at risk of failure? And isn’t it better to make the whole team responsible
for the result, instead of having one single point of failure?&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;The Color of Money (1986) by Martin Scorsese&quot; src=&quot;/images/2019/01/the-color-of-money.jpg&quot; longdesc=&quot;#de60815d&quot; /&gt;&lt;figcaption id=&quot;de60815d&quot;&gt;The Color of Money (1986) by Martin Scorsese&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;The question indeed is obvious. Dictatorship is a &lt;a href=&quot;/2016/09/27/command-control-innovate.html&quot;&gt;great&lt;/a&gt;
management model, provided the dictator is &lt;em&gt;smart&lt;/em&gt;. This means, first of all, having the ability
1) to analyze the reality, 2) &lt;a href=&quot;/2015/05/13/two-instruments-of-software-architect.html&quot;&gt;collect&lt;/a&gt;
all available differing opinions, and 3) find
the best possible option, leaving personal emotions aside. How many people
truly can do that? &lt;del&gt;None&lt;/del&gt; Very few.&lt;/p&gt;

&lt;p&gt;Everybody else will most likely abuse the power and turn into a bad dictator,
who doesn’t listen to anyone, doesn’t pay attention to different opinions,
and makes technical decisions out of personal feelings. How many
software architects like that are out there? &lt;del&gt;All&lt;/del&gt; Many.&lt;/p&gt;

&lt;p&gt;What is the solution?&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=PYq05UAwzNk&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/PYq05UAwzNk/mqdefault.jpg&quot; alt=&quot;YouTube video #PYq05UAwzNk&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M2: We must fully trust the architect, but regularly review the decisions he or she is making;
        28 December 2018.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;How about we get rid of the dictator in the first place and let the team
decide what the right architecture is? How about we replace dictatorship
with &lt;a href=&quot;/2016/02/18/holacracy-autocracy.html&quot;&gt;democracy&lt;/a&gt;
and let software developers &lt;em&gt;vote&lt;/em&gt; somehow, so that there will
be no single point of failure? They will all be responsible for the product,
and when it breaks—they will all be guilty. Right?&lt;/p&gt;

&lt;p&gt;Wrong!&lt;/p&gt;

&lt;p&gt;“Quality and responsibility mean nothing unless they are attributed personally,”
I said in my book &lt;a href=&quot;/code-ahead.html&quot;&gt;&lt;em&gt;Code Ahead&lt;/em&gt;&lt;/a&gt;. Group responsibility
is the most terrible mistake a team can ever make. So, no! No voting and no democracy.&lt;/p&gt;

&lt;p&gt;What then?&lt;/p&gt;

&lt;p&gt;Imagine a real project, where an architect makes a decision to use MongoDB (a NoSQL database) for persisting
user payments. It’s a questionable decision, since, traditionally, relational databases
are considered a better option for financial data. However, we know that the architect
is a dictator and we are not supposed to argue. We can’t tell the architect
that the decision is wrong. Moreover, we should not ask the architect to
&lt;a href=&quot;/2016/07/21/convince-me.html&quot;&gt;convince&lt;/a&gt; us. The decision is made. It’s done.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;The only real boss of the architect is requirements.
&lt;/aside&gt;

&lt;p&gt;What can we do?&lt;/p&gt;

&lt;p&gt;We can recall that the only real boss of the architect is &lt;em&gt;requirements&lt;/em&gt;. The
architect may not listen to us, to developers, to customers, to anyone. But
the requirements are the indisputable boss. Did the requirements document
mention anything about the choice of the database? Most likely there was nothing
about it. So the architect did everything right. The requirements said
that payments have to be persisted and they are. The requirements wanted
the system to process up to a hundred payments per second and it does. So,
where is the mistake?&lt;/p&gt;

&lt;p&gt;Well, we just &lt;em&gt;feel&lt;/em&gt; that the choice of MongoDB was a bad idea. It’s just gut feeling.
But maybe we are wrong and the architect is right?&lt;/p&gt;

&lt;p&gt;To make the situation more explicit and resolve the conflict,
we have to amend the requirements document. We have
to say that something else is required for this particular decision. Let’s say,
we add this line:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The choice of each third-party product has
to be grounded on a multi-factor analysis of
at least four alternatives.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once this requirement clause is approved, the architect will have to improve the
product documentation. There will have to be an analysis of MongoDB,
PostgreSQL, Oracle, and some other databases. There will be some selection
criteria defined and the architect will provide some numbers to make the
choice of MongoDB look reasonable.&lt;/p&gt;

&lt;p&gt;Once it’s done, the opinion of the architect will turn into a digital artifact,
which &lt;em&gt;may&lt;/em&gt; have defects. How many defects are there and how soon we find them
becomes a management question, which is relatively easy to resolve. We just
need a few additional pairs of eyes to look at this artifact and tell us
what’s wrong with it. For example, we can ask someone from the team to review
the analysis and tell us what’s wrong. Or we can &lt;a href=&quot;/2014/12/18/independent-technical-reviews.html&quot;&gt;hire&lt;/a&gt;
someone from the market, who is very expensive, but
a professional in the area of database management.&lt;/p&gt;

&lt;p&gt;Once defects are reported, they will have to be resolved somehow by the
architect. Either the analysis will have
to be improved, or the decision will have to be changed, if the facts start
stacking up against it.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;The lower the risk tolerance in the project, the more pairs of eyes we need to look at the decisions the architect is making.
&lt;/aside&gt;

&lt;p&gt;The lower the risk tolerance in the project, the more pairs of eyes we need
to look at the decisions the architect is making. If the quality is very
important or the professional level of the architect is questionable, we need
more decisions to be documented and more frequently reviewed. It’s a simple
game of numbers. If the architect is completely trusted and the project is not
expensive and only short-term—we just let the architect do whatever he or she
wants.&lt;/p&gt;

&lt;p&gt;On the other hand, if the architect is junior and the project is very important
to us, we must demand the majority of technical decisions to be documented
and analyzed. We must organize as many reviews of those documents as possible,
even inviting &lt;a href=&quot;/2014/12/18/independent-technical-reviews.html&quot;&gt;independent experts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thus, to summarize my points, we must not expect the architect to be an expert
capable of solving all problems. On the other hand, we must not replace the
architect with a democratic vote. Both ideas are wrong. The right approach is
to control the quality of decisions the architect makes via regular reviews.&lt;/p&gt;

&lt;p&gt;Do you have such reviews in your project? If not, why not?&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Imagine, you are a software architect and your manager tells you that your design decisions from now on will be regularly reviewed by another programmer, who they just contracted for that. What will be your answer?&lt;/p&gt;&amp;mdash; Yegor Bugayenko (@yegor256) &lt;a href=&quot;https://twitter.com/yegor256/status/1089398576793436160?ref_src=twsrc%5Etfw&quot;&gt;January 27, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="architect" /><summary type="html">You most probably know what I think about the architect role on a software project—it’s that of a dictator who makes all technical decisions and who bears the entire responsibility for the final result. I wrote about it and even gave a talk Who is a Software Architect? at BuildStuff in 2016. However, the obvious question you may ask is: What happens if the architect is wrong? Does it mean the entire project is at risk of failure? And isn’t it better to make the whole team responsible for the result, instead of having one single point of failure?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/01/the-color-of-money.jpg" /></entry><entry><title type="html">Hazardous Enthusiasm</title><link href="https://www.yegor256.com/2019/01/01/hazardous-enthusiasm.html" rel="alternate" type="text/html" title="Hazardous Enthusiasm" /><published>2019-01-01T00:00:00+00:00</published><updated>2019-01-01T00:00:00+00:00</updated><id>https://www.yegor256.com/2019/01/01/hazardous-enthusiasm</id><content type="html" xml:base="https://www.yegor256.com/2019/01/01/hazardous-enthusiasm.html">&lt;p&gt;On a daily basis I deal with many programmers who contribute to my
&lt;a href=&quot;/2017/05/30/why-contribute-to-open-source.html&quot;&gt;open source&lt;/a&gt;
projects, either as volunteers or for money via &lt;a href=&quot;https://www.zerocracy.com&quot;&gt;Zerocracy&lt;/a&gt;
(and my software projects are &lt;a href=&quot;/2015/12/22/why-dont-you-contribute-to-open-source.html&quot;&gt;all&lt;/a&gt;
open source). Over the years I have realized
that there is a pattern in their behavior, which I need to be &lt;del&gt;scared&lt;/del&gt; aware of.
I call it “hazardous enthusiasm.” Here are the symptoms.&lt;/p&gt;

&lt;!--more--&gt;

&lt;figure class=&quot;jb_picture&quot;&gt;&lt;img itemprop=&quot;image&quot; alt=&quot;The Thin Red Line (1998) by Terrence Malick&quot; src=&quot;/images/2019/01/the-thin-red-line.jpg&quot; longdesc=&quot;#4a7672ec&quot; /&gt;&lt;figcaption id=&quot;4a7672ec&quot;&gt;The Thin Red Line (1998) by Terrence Malick&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;A new developer joins the project. He is full of energy,
talks a lot, spends a lot of time on the project, submits
new tickets, and suggests improvements. He looks like a great candidate
and we all are happy to see him on board. He is a godsend!&lt;/p&gt;

&lt;p&gt;Then, when things become clearer for him, he starts criticizing the architecture.
He &lt;a href=&quot;/2014/10/07/stop-chatting-start-coding.html&quot;&gt;approaches&lt;/a&gt;
me in Telegram and asks me whether I realize that the architecture
is a total mess and that if we don’t change it immediately the project will
be dead in a few &lt;del&gt;days&lt;/del&gt; weeks. I attempt to assure him that I understand,
but… He immediately suggests an improvement: We have to re-do it all from
scratch or at least get rid of that collection of objects and replace it with
a singleton and a very nice &lt;a href=&quot;/2014/12/01/orm-offensive-anti-pattern.html&quot;&gt;ORM&lt;/a&gt;
library he’s been using for a year, and it’s
just great, blah blah blah… OK? Let’s do it? Why not?&lt;/p&gt;

&lt;aside class=&quot;youtube&quot;&gt;
        &lt;a href=&quot;https://www.youtube.com/watch?v=gMJNz9AWbQE&quot;&gt;&lt;div class=&quot;box&quot;&gt;
        &lt;img src=&quot;https://i.ytimg.com/vi/gMJNz9AWbQE/mqdefault.jpg&quot; alt=&quot;YouTube video #gMJNz9AWbQE&quot; /&gt;
        &lt;div class=&quot;play&quot;&gt;&lt;i class=&quot;icon icon-play&quot;&gt;&lt;/i&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;/a&gt;
        &lt;div&gt;M1: Your enthusiasm may only harm the project if you can't deliver it incrementally;
        27 December 2018.&lt;/div&gt;&lt;/aside&gt;

&lt;p&gt;I have very little to say and instead ask him to submit a ticket. I try to assure him
that I will investigate the possibilities as soon as I can. I also try
to remind him, in a very polite way, that I’m an
&lt;a href=&quot;/2014/10/12/who-is-software-architect.html&quot;&gt;architect&lt;/a&gt; here and, even though
his ideas sound great, I can’t accept them all at once.
Then he goes: “Let me show you!”&lt;/p&gt;

&lt;p&gt;In a few days I get a giant pull request with a lot of changes
that look interesting but that go completely against almost every principle
I’ve managed to embed into the existing architecture. What do I do? I feel sorry
for him. I have to reject the pull request and I try to explain why.
But there is no reasonable explanation. I’m just a bad guy who doesn’t like
innovative ideas.&lt;/p&gt;

&lt;p&gt;What happens next? Well, he disappears.&lt;/p&gt;

&lt;p&gt;I’ve seen this happen many times, with various people. Were they all
incompetent programmers? I don’t think so. They were great, from a technical point of view.
But they all lacked the very important skill which, I believe, distinguishes
a professional software engineer from a guy who merely learned how to write Java code:
&lt;a href=&quot;/2017/11/28/microtasking.html&quot;&gt;microtasking&lt;/a&gt;.&lt;/p&gt;

&lt;aside class=&quot;quote&quot;&gt;They simply don’t know how to break their changes into smaller pieces and deliver them incrementally.
&lt;/aside&gt;

&lt;p&gt;They simply don’t know how to break their changes, which in most cases are
by no means useless, into smaller pieces and deliver them incrementally. They want to
push everything they have in mind in one large chunk. Of course,
they fail. Because there is a bad guy in front of them: me, the architect.&lt;/p&gt;

&lt;p&gt;What makes their cases fatal is the enthusiasm. If they were less
aggressive and eager to do the right thing, they would survive. But they can’t
wait and they don’t want to apply half-measures. They want to fix the world
in one huge pull request.&lt;/p&gt;

&lt;p&gt;Why can’t I just accept their changes and let them fix the code the way
they want, you may ask? Because I know that even though they may look like
good programmers, they would be lousy architects, exactly because they lack
the skill of &lt;a href=&quot;/2017/11/28/microtasking.html&quot;&gt;microtasking&lt;/a&gt;.
If I accept what they suggest, I will simply transfer
my architect’s &lt;a href=&quot;/2015/05/11/software-architect-responsibilities.html&quot;&gt;responsibilities&lt;/a&gt;
to them. It will be their architecture from
now on. And what’s wrong with that? Well, their lack of that skill. They won’t be able
to be architects, because they can’t manage changes, can’t deliver them incrementally,
and can’t understand the dynamics of collaborative work with the source code.&lt;/p&gt;

&lt;p&gt;They are &lt;a href=&quot;/2014/10/26/hacker-vs-programmer-mentality.html&quot;&gt;hackers&lt;/a&gt;,
not designers or &lt;a href=&quot;/2018/06/26/are-you-an-architect.html&quot;&gt;architects&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Honestly, I feel sorry when I lose them.&lt;/p&gt;</content><author><name>Yegor Bugayenko</name><email>yegor256@gmail.com</email></author><category term="mood" /><summary type="html">On a daily basis I deal with many programmers who contribute to my open source projects, either as volunteers or for money via Zerocracy (and my software projects are all open source). Over the years I have realized that there is a pattern in their behavior, which I need to be scared aware of. I call it “hazardous enthusiasm.” Here are the symptoms.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://www.yegor256.com/images/2019/01/the-thin-red-line.jpg" /></entry></feed>